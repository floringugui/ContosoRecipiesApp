// <auto-generated />
using System;
using ContosoRecipiesApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContosoRecipiesApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230104075400_AddDirectionsAndIngredientsRecords")]
    partial class AddDirectionsAndIngredientsRecords
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContosoRecipiesApi.Models.Direction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Directions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Direction1 Description",
                            RecipeId = 1,
                            Step = "Direction1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Direction2 Description",
                            RecipeId = 1,
                            Step = "Direction2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Direction3 Description",
                            RecipeId = 1,
                            Step = "Direction3"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Direction4 Description",
                            RecipeId = 2,
                            Step = "Direction4"
                        });
                });

            modelBuilder.Entity("ContosoRecipiesApi.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Ingredient1 Description",
                            Name = "Ingredient1",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Ingredient2 Description",
                            Name = "Ingredient2",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Ingredient3 Description",
                            Name = "Ingredient3",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Ingredient4 Description",
                            Name = "Ingredient4",
                            RecipeId = 2
                        });
                });

            modelBuilder.Entity("ContosoRecipiesApi.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 1, 4, 9, 53, 59, 970, DateTimeKind.Local).AddTicks(851));

                    b.HasKey("Id");

                    b.ToTable("Recipes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Breakfast1 Description",
                            Title = "Breakfast1",
                            Updated = new DateTime(2023, 1, 4, 9, 53, 59, 970, DateTimeKind.Local).AddTicks(2168)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Dinner1 Description",
                            Title = "Dinner1",
                            Updated = new DateTime(2023, 1, 3, 9, 53, 59, 970, DateTimeKind.Local).AddTicks(2184)
                        });
                });

            modelBuilder.Entity("ContosoRecipiesApi.Models.Direction", b =>
                {
                    b.HasOne("ContosoRecipiesApi.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ContosoRecipiesApi.Models.Ingredient", b =>
                {
                    b.HasOne("ContosoRecipiesApi.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });
#pragma warning restore 612, 618
        }
    }
}
